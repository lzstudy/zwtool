# 单独移植打开
# ROOT_PATH=$HOME/.zwbin

# 通用路径
ROOT_PATH=$PATH_ZWTL_ROOT
WORK_PATH=$PATH_ZWTL_HOST/zwcd

# WORK文件
DEFAULT_FILE=$WORK_PATH/default
WORK_FILE=$WORK_PATH/current


########################################################################################################
# 打印使用方法
########################################################################################################
function print_usage()
{
    echo "cmd           [arg]            [val]     description"
    echo "----------    -------------    ------    --------------"
	echo "kd                             .         add path"
    echo "kd                             num       cd path"
    echo "kd            -d               num       del path"
    echo "kd            -sw              group     switch group"
    echo "kd            -l/ls                      look group"
}

########################################################################################################
# 初始化
########################################################################################################
function zwcd_init()
{
    # 初始化
    mkdir -p $WORK_PATH
    touch $DEFAULT_FILE
    ln -s $DEFAULT_FILE $WORK_FILE 2>/dev/null
}

########################################################################################################
# 打印环境
########################################################################################################
function zwcd_env()
{
    echo -e "\033[33mENV VAR: \033[0m"
    echo "    export PATH=\$PATH:$PWD"
    echo "    export PATH_ZWTL_ROOT=$PWD"
    echo "    alias kd='source zwcd'"
}


########################################################################################################
# zwcd切换
########################################################################################################
function zwcd_switch()
{
    KD_FILE=$WORK_PATH/$1

    touch $KD_FILE
    rm $WORK_FILE 2>/dev/null
    ln -s $KD_FILE $WORK_FILE 2>/dev/null
}

########################################################################################################
# 添加路径
########################################################################################################
function list_add()
{
    echo $PWD >> $1
}

########################################################################################################
# 删除某行
########################################################################################################
function list_sub()
{
    sed --follow-symlinks -i ''$2' d' $1
}

########################################################################################################
# 清空zdlist
########################################################################################################
function list_clr()
{
    truncate -s 0 $1
}

########################################################################################################
# 展示列表
########################################################################################################
function list_show()
{
    cat -n $1
}

########################################################################################################
# 进入路径
########################################################################################################
function entry_dir()
{
    TARGET=$(sed -n ''$1' p' $WORK_FILE)
    cd $TARGET
}

########################################################################################################
# 进入模糊路径, 优选选择最后匹配, 最后选择第一命中的
########################################################################################################
function entry_vague_dir()
{
    DIR=
    CNT=0
    TARGET=$(grep "$1" $WORK_FILE)

    # 选择逐行读取，然后匹配

    # 如果没匹配到, 那么打印已有列表
    if [ -z "$TARGET" ]; then
        list_show $WORK_FILE
        return
    fi

    # 将其转换为数组
    arr=($TARGET)

    # 如果只有一个路径匹配, 直接进入
    if [[ $(echo ${#arr[@]}) == 1 ]];then
        cd $TARGET
        return
    fi

    # 优路径最末尾匹配
    for ITEM in ${arr[@]}
    do
        LAST=$(echo ${ITEM##*/})
        if [[ $LAST == *${1}* ]];then
            CNT=$[$CNT+1]
            DIR=$ITEM
        fi
    done

    # 如果只匹配到一次, 则进入, 多次则打印
    if [[ $CNT == 1 ]];then
        cd $DIR
    else
		echo -e "\033[33mMultiple dir match please retry! \033[0m"
        CNT=0;
        cat $WORK_FILE | while read line; do
            CNT=$[$CNT+1]
            if [[ $line == *"$1"* ]]; then
                echo "    $CNT  $line"
            fi
        done
    fi
}

########################################################################################################
# 添加路径
########################################################################################################
function qk_add()
{
    echo $PWD > $WORK_FILE
}

########################################################################################################
# 跳转
########################################################################################################
function qk_entry()
{
    DIR=`cat $WORK_FILE`
    cd $DIR
}

########################################################################################################
# 程序入口
########################################################################################################
function zwcd_entry()
{
	# 参数判断
	if [ $# = 0 ];then
		list_show $WORK_FILE
    else
        case $1 in
            -h)
            print_usage
            ;;

			-init)
			zwcd_init
			;;

            -env)
            zwcd_env
            ;;

            -work)
            cd $WORK_PATH
            ;;
            
            -root)
            cd $ROOT_PATH
            ;;

            '.')
            list_add $WORK_FILE
            ;;

            -d)
            list_sub $WORK_FILE $2
            ;;

            -c)
            list_clr $WORK_FILE
            ;;

            -l)
            ls $WORK_PATH
            ;;

			-ls)
			ls $WORK_PATH
			;;

            -rm)
            rm $WORK_PATH/$2
            ;;

            -mv)
            mv $WORK_PATH/$2 $WORK_PATH/$3
            ;;

            -sw)
            zwcd_switch $2
            ;;

			-e)
			vi $WORK_FILE
			;;

            -edit)
            vi $ROOT_PATH/zwcd
            ;;

            [1-9])
            entry_dir $1
            ;;

            [1-9][0-9]*)
            entry_dir $1
            ;;

            +)
            qk_add
            ;;

            -)
            qk_entry
            ;;

            *)
            entry_vague_dir $1
            ;;
        esac
    fi
}

zwcd_entry $@
